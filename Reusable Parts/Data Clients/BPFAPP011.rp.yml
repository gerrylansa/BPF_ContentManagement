Reusable Part:
  Name:               BPFLanguageResourcesDataClient
  Enabled For RDMLX:  Yes
  Target Platform:    Browser

  Multilingual Details:
  - ENG:
      Description:        "Data Client for Language Resources"

  - JPN:
      Description:        "Data Client for Language Resources"

  Source: |
    Function Options(*DIRECT)
    Begin_Com Role(*EXTENDS #PRIM_OBJT)
    
    * Application References
    Define_Com Class(#BPFBrowserEvents) Name(#Browser) Scope(*APPLICATION)
    
    * Definitions
    
    * Properties
    Define_Pty Name(AreActive) Get(GetAreActive)
    Define_Com Class(#PRIM_BOLN) Name(#AreActive) Reference(*DYNAMIC)
    
    Define_Pty Name(Resources) Get(*REFERENCE #Resources)
    Define_Pty Name(Resource) Get(GetResource)
    
    Define_Pty Name(Languages) Get(*REFERENCE #Languages)
    Define_Pty Name(Language) Get(GetLanguage)
    
    Define_Pty Name(DefaultLanguage) Get(*REFERENCE #DefaultLangauge)
    Define_Com Class(#BPFLanguageOptionItemClass) Name(#DefaultLangauge) Reference(*DYNAMIC)
    
    * Events
    Define_Evt Name(OnGetLanguageOptionsCompleted)
    Define_Evt Name(OnGetLanguageOptionsFailed)
    
    Define_Evt Name(OnGetResourcesCompleted)
    Define_Map For(*INPUT) Class(#PRIM_BOLN) Name(#MoreResult)
    
    Define_Evt Name(OnGetResourcesFailed)
    
    Define_Evt Name(OnGetResourceCompleted)
    Define_Evt Name(OnGetResourceFailed)
    
    * Objects
    
    * Collections
    Define_Com Class(#PRIM_LCOL<#BPFLanguageResourceItemClass>) Name(#Resources)
    Define_Com Class(#PRIM_LCOL<#BPFLanguageOptionItemClass>) Name(#Languages)
    
    * Routines
    
    * Properties
    Ptyroutine Name(GetResource)
    Define_Map For(*OUTPUT) Class(#BPFLanguageResourceItemClass) Name(#Property) Pass(*BY_REFERENCE)
    Define_Map For(*INPUT) Class(#BPFCodeGroup) Name(#Key)
    
    * Search till the first match
    For Each(#Item) In(#Resources)
    
    Continue If(#Key.UpperCase <> #item.Identifier)
    
    #Property <= #Item
    
    Leave
    
    Endfor
    
    Endroutine
    
    Ptyroutine Name(GetLanguage)
    Define_Map For(*OUTPUT) Class(#BPFLanguageOptionItemClass) Name(#Property) Pass(*BY_REFERENCE)
    Define_Map For(*INPUT) Class(#Prim_dc.UnicodeString) Name(#Key)
    
    * Search till the first match
    For Each(#Item) In(#Languages)
    
    Continue If(#Key.LowerCase <> #item.IsoCode.LowerCase)
    
    #Property <= #Item
    
    Leave
    
    Endfor
    
    Endroutine
    
    Ptyroutine Name(GetAreActive)
    Define_Map For(*OUTPUT) Class(#PRIM_BOLN) Name(#Property)
    
    If (#AreActive *Is *Null)
    
    #COM_SELF.GetIsActive
    
    Endif
    
    #Property := #AreActive
    
    Endroutine
    
    * Methods
    
    Mthroutine Name(GetIsActive) Access(*PRIVATE)
    
    * Define Request to Server Routine
    Define_Com Class(#BPFLanguageSupportDataServer.GetIsActive) Name(#Request)
    
    #AreActive <= *New #PRIM_BOLN
    #Request.Execute Active(#AreActive)
    
    Endroutine
    
    * Languages
    Mthroutine Name(GetLanguageOptions)
    
    * Define Request to Server Routine
    Define_Com Class(#BPFLanguageSupportDataServer.GetLanguageOptions) Name(#Request)
    Define_Com Class(#PRIM_NMBR) Name(#DefaultIndex)
    
    * Make Request
    #Request.ExecuteAsync Data(#Languages) Defaultindex(#DefaultIndex) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = OK)
    
    #DefaultLangauge <= #Languages<#DefaultIndex>
    Signal Event(OnGetLanguageOptionsCompleted)
    
    Else
    
    Signal Event(OnGetLanguageOptionsFailed)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnGetLanguageOptionsFailed)
    
    Endroutine
    
    Endroutine
    
    * Resources
    
    Mthroutine Name(GetResources)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#SearchValue)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#TypeValue) Mandatory(*NULL)
    
    * Local Variable
    Define_Com Class(#PRIM_BOLN) Name(#More)
     
    * Define Request to Server Routine
    Define_Com Class(#BPFLanguageSupportDataServer.GetResourcesByName) Name(#Request)
    
    * Make Request
    #Request.ExecuteAsync Searchvalue(#SearchValue) Typevalue(#TypeValue) Data(#Resources) Moreresults(#More) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = OK)
    
    Signal Event(OnGetResourcesCompleted) Moreresult(#More)
    
    Else
    
    Signal Event(OnGetResourcesFailed)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnGetResourcesFailed)
    
    Endroutine
    
    Endroutine
    
    
    * Get Resource by ID only
    Mthroutine Name(GetResourceByIdentifier)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#Value)
    
    * Local Variable
    Define_Com Class(#PRIM_BOLN) Name(#More)
    
    * Define Request to Server Routine
    Define_Com Class(#BPFLanguageSupportDataServer.GetResourceByID) Name(#Request)
    
    * Make Request
    #Request.ExecuteAsync Identifier(#Value) Data(#Resources) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = OK)
    
    Signal Event(OnGetResourceCompleted)
    
    Else
    
    Signal Event(OnGetResourceFailed)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnGetResourceFailed)
    
    Endroutine
    
    Endroutine
    
    End_Com
