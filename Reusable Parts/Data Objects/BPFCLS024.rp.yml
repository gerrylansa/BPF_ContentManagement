Reusable Part:
  Name:               BPFContentLibraryItemClass
  Enabled For RDMLX:  Yes
  Target Platform:    Browser

  Multilingual Details:
  - ENG:
      Description:        "Content Library Item Class"

  - JPN:
      Description:        "Content Library Item Class"

  Source: |
    Function Options(*DIRECT)
    Begin_Com Role(*EXTENDS #PRIM_OBJT *LISTFIELDS #ListFields)
    
    * Appilcation references
    Define_Com Class(#BPFBrowserEvents) Name(#Browser) Scope(*APPLICATION)
    
    * Group by for data mapping of listfields
    Group_By Name(#Listfields) Fields(#BPFContentItemID #BPFContentItemName #BPFContentItemDesc #BPFContentItemTokenFileName #BPFContentItemAlphaDetail #BPFContentItemNumericDetail #BPFContentItemCreatedBy #BPFSessionEventValue1 #BPFContentItemCreated #BPFContentItemModifiedBy #BPFSessionEventValue2 #BPFContentItemModified)
    
    * Groups
    Group_By Name(#UpdateGroup) Fields(#BPFContentItemID #BPFContentItemName #BPFContentItemDesc #BPFContentItemTokenFileName #BPFContentItemAlphaDetail #BPFContentItemNumericDetail #BPFContentItemObject)
    Group_By Name(#DatesGroup) Fields(#BPFContentItemID #BPFContentItemCreatedBy #BPFSessionEventValue1 #BPFContentItemCreated #BPFContentItemModifiedBy #BPFSessionEventValue2 #BPFContentItemModified)
    
    * Defintions
    
    * Properties
    Define_Pty Name(Identifier) Get(*AUTO #BPFContentItemID)
    Define_Pty Name(ItemName) Get(*AUTO #BPFContentItemName) Set(*AUTO #BPFContentItemName)
    Define_Pty Name(ItemDescription) Get(*AUTO #BPFContentItemDesc) Set(*AUTO #BPFContentItemDesc)
    Define_Pty Name(ItemToken) Get(*AUTO #BPFContentItemTokenFileName) Set(SetTokenFileName)
    Define_Pty Name(AlphaDetail) Get(*AUTO #BPFContentItemAlphaDetail) Set(*AUTO #BPFContentItemAlphaDetail)
    Define_Pty Name(NumericDetail) Get(*AUTO #BPFContentItemNumericDetail) Set(*AUTO #BPFContentItemNumericDetail)
    Define_Pty Name(ItemCreatedByID) Get(*AUTO #BPFContentItemCreatedBy)
    Define_Pty Name(ItemCreatedByFullName) Get(*AUTO #BPFSessionEventValue1)
    Define_Pty Name(ContentCreated) Get(*AUTO #BPFContentItemCreated)
    Define_Pty Name(ItemModifiedByID) Get(*AUTO #BPFContentItemModifiedBy)
    Define_Pty Name(ItemModifiedByFullName) Get(*AUTO #BPFSessionEventValue2)
    Define_Pty Name(ContentModified) Get(*AUTO #BPFContentItemModified)
    
    Define_Pty Name(ItemType) Get(GetItemType)
    Define_Pty Name(ItemTypeDescription) Get(GetItemTypeDescription)
    
    Define_Pty Name(ItemTypeIcon) Get(GetItemTypeIcon)
    Define_Pty Name(ItemTypeColour) Get(GetItemTypeColour)
    Define_Pty Name(ItemSize) Get(GetContentSize)
    Define_Pty Name(ItemDuration) Get(GetContentDuration)
    Define_Pty Name(LastActionedDate) Get(GetLastActionedDate)
    Define_Pty Name(VideoItemThumbnailURL) Get(GetYoutubeThumbURL)
    
    Define_Pty Name(RelatedViewer) Get(GetItemRelatedViewer)
    
    Define_Com Class(#PRIM_BOLN) Name(#BlockLoad)
    
    * Loaded Seperately
    Define_Pty Name(Object) Get(*AUTO #BPFContentItemObject) Set(*AUTO #BPFContentItemObject)
    
    * References
    Define_Com Class(#BPFContentItemDetailsCollection) Name(#Details)
    
    * Globals
    Define_Com Class(#BPFContentLibraryItemClass) Name(#Source) Reference(*DYNAMIC)
    
    * Events
    Define_Evt Name(OnLoadItemCompleted)
    Define_Evt Name(OnLoadItemFailed)
    Define_Map For(*INPUT) Class(#PRIM_DC.UnicodeString) Name(#Reason) Mandatory(*NULL)
    
    * Define_Evt Name(OnGetLoadExtraDetailsCompleted)
    * Define_Evt Name(OnGetLoadExtraDetailsFailed)
    
    Define_Evt Name(OnGetObjectCompleted)
    Define_Evt Name(OnGetObjectFailed)
    
    Define_Evt Name(OnSaveCompleted)
    Define_Evt Name(OnSaveFailed)
    Define_Map For(*INPUT) Class(#PRIM_DC.UnicodeString) Name(#Reason) Mandatory(*NULL)
    
    Define_Evt Name(Updated)
    
    Define_Evt Name(OnDeleteCompleted)
    Define_Evt Name(OnDeleteFailed)
    
    * Routines
    
    * Properties
    * Ptyroutine Name(GetFoldersCount)
    * Define_Map For(*OUTPUT) Class(#PRIM_NMBR) Name(#Property)
    *
    * #Property := 0
    *
    * If (#BPFContentShareItemIsFolder)
    *
    * #Property := #BPFContentItemAlphaDetail.AsNumber
    *
    * Endif
    *
    * Endroutine
    
    * Ptyroutine Name(GetContentCount)
    * Define_Map For(*OUTPUT) Class(#PRIM_NMBR) Name(#Property)
    *
    * #Property := 0
    *
    * If (#BPFContentShareItemIsFolder)
    *
    * #Property := #BPFContentItemNumericDetail
    *
    * Endif
    *
    * Endroutine
    
    * Ptyroutine Name(GetTotalCount)
    * Define_Map For(*OUTPUT) Class(#PRIM_NMBR) Name(#Property)
    *
    * #Property := 0
    *
    * If (#BPFContentShareItemIsFolder)
    *
    * #Property := #BPFContentItemAlphaDetail.AsNumber + #BPFContentItemNumericDetail
    *
    * Endif
    *
    * Endroutine
    
    Ptyroutine Name(GetItemType)
    Define_Map For(*OUTPUT) Class(#PRIM_DC.UnicodeString) Name(#Property)
    
    #Property := #BPFContentItemAlphaDetail
    
    Endroutine
    
    Ptyroutine Name(GetItemTypeDescription)
    Define_Map For(*OUTPUT) Class(#PRIM_DC.UnicodeString) Name(#Property)
    
    
    If (#Details.Type<#BPFContentItemAlphaDetail>.TypeDescription.IsNull)
    
    #Property := #BPFContentItemAlphaDetail.UpperCase + ' ' + #Details.Type<DEFAULT>.TypeDescription
    
    Else
    
    #Property := #Details.Type<#BPFContentItemAlphaDetail>.TypeDescription
    
    Endif
    
    Endroutine
    
    Ptyroutine Name(GetItemTypeIcon)
    Define_Map For(*OUTPUT) Class(#PRIM_DC.UnicodeString) Name(#Property)
    
    If (#Details.Type<#BPFContentItemAlphaDetail>.TypeIcon.IsNull)
    
    #Property := #Details.Type<DEFAULT>.TypeIcon
    
    Else
    
    #Property := #Details.Type<#BPFContentItemAlphaDetail>.TypeIcon
    
    Endif
    
    Endroutine
    
    Ptyroutine Name(GetItemTypeColour)
    Define_Map For(*OUTPUT) Class(#PRIM_DC.UnicodeString) Name(#Property)
    
    If (#Details.Type<#BPFContentItemAlphaDetail>.TypeColour<#SYS_WEB.WebPage.ThemeBackground>.IsNull)
    
    #Property := #Details.Type<DEFAULT>.TypeColour<#SYS_WEB.WebPage.ThemeBackground>
    
    Else
    
    #Property := #Details.Type<#BPFContentItemAlphaDetail>.TypeColour<#SYS_WEB.WebPage.ThemeBackground>
    
    Endif
    
    Endroutine
    
    Ptyroutine Name(GetItemRelatedViewer)
    Define_Map For(*OUTPUT) Class(#PRIM_DC.UnicodeString) Name(#Property)
    
    
    If (#Details.Type<#BPFContentItemAlphaDetail>.RelatedViewer.IsNull)
    
    #Property := #Details.Type<DEFAULT>.RelatedViewer
    
    Else
    
    If ((#Browser.IsInternetExplorer) *And (#Details.Type<#BPFContentItemAlphaDetail>.DownloadInOldBrowsers))
    
    #Property := #Details.Type<DEFAULT>.RelatedViewer
    
    Else
    
    #Property := #Details.Type<#BPFContentItemAlphaDetail>.RelatedViewer
    
    Endif
    
    Endif
    
    Endroutine
    
    Ptyroutine Name(GetContentSize)
    Define_Map For(*OUTPUT) Class(#PRIM_NMBR) Name(#Property)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#Key)
    
    #Property := 0
    If (#BPFContentItemAlphaDetail <> YTV)
    
    Case Of_Field(#Key.UpperCase)
    
    When Value_Is(= B)
    
    #Property := #BPFContentItemNumericDetail
    
    When Value_Is(= KB)
    
    #Property := (#BPFContentItemNumericDetail / 1024).Round( Up )
    
    When Value_Is(= MB)
    
    #Property := ((#BPFContentItemNumericDetail / 1024) / 1024).Round( Up )
    
    Otherwise
    
    #Property := #BPFContentItemNumericDetail
    
    Endcase
    
    Endif
    
    Endroutine
    
    Ptyroutine Name(GetContentDuration)
    Define_Map For(*OUTPUT) Class(#PRIM_ALPH) Name(#Property)
    
    Define_Com Class(#PRIM_NMBR) Name(#Hours)
    Define_Com Class(#PRIM_NMBR) Name(#Minutes)
    Define_Com Class(#PRIM_NMBR) Name(#Seconds)
    
    #Property := '0:00'
    If (#BPFContentItemAlphaDetail = YTV)
    
    #Hours := (#BPFContentItemNumericDetail / 3600).Round( Down )
    #Minutes := (#BPFContentItemNumericDetail / 60).Round( Down ) - (60 * #hours)
    #Seconds := #BPFContentItemNumericDetail.AsFloat.FMod( 60 )
    
    If (#Hours > 0)
    
    #Property := #Hours.AsString + ':' + (#Minutes.AsString).RightAdjust( 2 '0' ) + ':' + (#Seconds.AsString).RightAdjust( 2 '0' )
    
    Else
    
    #Property := #Minutes.AsString + ':' + (#Seconds.AsString).RightAdjust( 2 '0' )
    
    Endif
    
    Endif
    
    Endroutine
    
    Ptyroutine Name(GetLastActionedDate)
    Define_Map For(*OUTPUT) Class(#PRIM_DAT) Name(#Property)
    
    #Property.AllowSqlNull := True
    #Property := #BPFContentItemModified
    
    If (#Property.IsSqlNull)
    
    #Property := #BPFContentItemCreated
    
    Endif
    
    Endroutine
    
    Ptyroutine Name(GetYoutubeThumbURL)
    Define_Map For(*OUTPUT) Class(#PRIM_DC.UnicodeString) Name(#Property)
    
    #Property := *Null
    
    If (#BPFContentItemAlphaDetail = YTV)
    
    #Property := 'https://img.youtube.com/vi/' + #BPFContentItemTokenFileName + '/mqdefault.jpg'
    
    Endif
    
    Endroutine
    
    Ptyroutine Name(SetTokenFileName)
    Define_Map For(*INPUT) Class(#PRIM_DC.UnicodeString) Name(#Property)
    
    * Its a file
    #BPFContentItemTokenFileName := #Property
    
    * Check if we have a file or token
    If (#Property.Contains( '.' ))
    
    * Set Alpha detail, with suffix
    #BPFContentItemAlphaDetail := (#Property.Substring( (#Property.LastPositionOf( '.' ) + 1) )).UpperCase
    
    Endif
    
    Endroutine
    
    * Events
    
    * Methods
    
    * Public
    Mthroutine Name(Save)
    
    * Define Request to Server Routine
    Define_Com Class(#BPFContentSharingDataServer.SaveContentItem) Name(#Request)
    
    * Make Request
    #Request.ExecuteAsync Data(#UpdateGroup) Returndata(#DatesGroup) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = OK)
    
    * All was fine, so we can now update the parent
    If (#Source *IsNot *Null)
    
    #Source.Copy( #COM_SELF True )
    
    Else
    
    #BlockLoad := True
    
    Endif
    
    Signal Event(OnSaveCompleted)
    
    Else
    
    If ((#Source *IsNot *Null) *AndIf (#Status = NR))
    
    #Source.SignalFailed( #Status )
    
    Endif
    
    Signal Event(OnSaveFailed) Reason(#Status)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnSaveFailed)
    
    Endroutine
    
    Endroutine
    
    Mthroutine Name(Delete)
    
    * Define Request to Server Routine
    Define_Com Class(#BPFContentSharingDataServer.DeleteContentItem) Name(#Request)
    
    * Make Request
    #Request.ExecuteAsync Forid(#BPFContentItemID) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = OK)
    
    Signal Event(OnDeleteCompleted)
    
    Else
    
    Signal Event(OnDeleteFailed)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnDeleteFailed)
    
    Endroutine
    
    Endroutine
    
    Mthroutine Name(SignalFailed)
    Define_Map For(*INPUT) Class(#PRIM_DC.UnicodeString) Name(#Reason)
    
    Signal Event(OnSaveFailed) Reason(#Reason)
    
    Endroutine
    
    Mthroutine Name(Copy)
    Define_Map For(*INPUT) Class(#BPFContentLibraryItemClass) Name(#SourceReference) Pass(*BY_REFERENCE)
    Define_Map For(*INPUT) Class(#PRIM_BOLN) Name(#SignalEvent) Mandatory(False)
    
    * Hold the Reference
    #Source <= #SourceReference
    
    * Map Data
    #BPFContentItemID := #Source.Identifier
    #BPFContentItemName := #Source.ItemName
    #BPFContentItemDesc := #Source.ItemDescription
    #BPFContentItemTokenFileName := #Source.ItemToken
    #BPFContentItemAlphaDetail := #Source.AlphaDetail
    #BPFContentItemNumericDetail := #Source.NumericDetail
    #BPFContentItemCreatedBy := #Source.ItemCreatedByID
    #BPFSessionEventValue1 := #Source.ItemCreatedByFullName
    #BPFContentItemCreated := #Source.ContentCreated
    #BPFContentItemModifiedBy := #Source.ItemModifiedByID
    #BPFSessionEventValue2 := #Source.ItemModifiedByFullName
    #BPFContentItemModified := #Source.ContentModified
    
    If (#SignalEvent)
    
    #BlockLoad := True
    
    #Source <= *Null
    Signal Event(Updated)
    
    Endif
    
    Endroutine
    
    Mthroutine Name(Load)
    Define_Map For(*INPUT) Class(#PRIM_DC.UnicodeString) Name(#ForItem)
    
    * Define Request to Server Routine
    Define_Com Class(#BPFContentSharingDataServer.GetContentItemByID) Name(#Request)
    
    * Make Request
    If (#BlockLoad)
    
    #BlockLoad := False
    Signal Event(OnLoadItemCompleted)
    
    Else
    
    #Request.ExecuteAsync Forid(#ForItem.UpperCase) Contentgroup(#Listfields) Status(#Status)
    
    Endif
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = OK)
    
    Signal Event(Updated)
    Signal Event(OnLoadItemCompleted)
    
    Else
    
    Case Of_Field(#Status)
    
    When Value_Is(= NA)
    
    Signal Event(OnLoadItemFailed) Reason(NOTALLOWED)
    
    When Value_Is(= NR)
    
    Signal Event(OnDeleteCompleted)
    Signal Event(OnLoadItemFailed) Reason(MISSING)
    
    Otherwise
    
    Signal Event(OnLoadItemFailed)
    
    Endcase
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnLoadItemFailed) Reason(SESSION)
    
    Endroutine
    
    Endroutine
    
    * Mthroutine Name(Rename)
    * Define_Map For(*INPUT) Class(#Prim_DC.UnicodeString) Name(#NewName)
    *
    * * Define Request to Server Routine
    * Define_Com Class(#BPFContentSharingDataServer.RenameItem) Name(#Request)
    *
    * * Make Request
    * #Request.ExecuteAsync Item(#BPFContentShareItemID) Name(#NewName) Modified(#BPFContentShareItemModified) Modifiedby(#BPFContentShareItemModifiedBy) Status(#Status)
    *
    * Evtroutine Handling(#Request.Completed)
    *
    * If (#Status = OK)
    *
    * #BPFContentShareItemName := #NewName
    *
    * Signal Event(OnItemRenameCompleted)
    *
    * Else
    *
    * Signal Event(OnItemRenameFailed)
    *
    * Endif
    *
    * Endroutine
    *
    * Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    *
    * #Handled := True
    * Signal Event(OnItemRenameFailed)
    *
    * Endroutine
    *
    * Endroutine
    
    Mthroutine Name(GetObject)
    
    * Define Request to Server Routine
    Define_Com Class(#BPFContentSharingDataServer.GetItemObject) Name(#Request)
    
    * Make Request
    #Request.ExecuteAsync Item(#BPFContentItemID) Object(#BPFContentItemObject) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = OK)
    
    Signal Event(OnGetObjectCompleted)
    
    Else
    
    Signal Event(OnGetObjectFailed)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnGetObjectFailed)
    
    Endroutine
    
    Endroutine
    
    * Constructors
    * Mthroutine Name(NewItem) Options(*CONSTRUCTOR)
    * Define_Map For(*INPUT) Class(#PRIM_LCOL<#BPFContentShareItemClass>) Name(#Data) Pass(*BY_REFERENCE)
    *
    * * Map Data
    * #BPFContentShareItemID := #Data<1>.Identifier
    * #BPFContentShareItemName := #Data<1>.ItemName
    * #BPFContentItemName := #Data<1>.ContentName
    * #BPFContentShareItemIsFolder := #Data<1>.IsFolder
    * #BPFContentShareItemParentID := #Data<1>.ParentID
    * #BPFContentItemTokenFileName := #Data<1>.ContentToken
    * #BPFContentItemAlphaDetail := #Data<1>.AlphaValue
    * #BPFContentItemNumericDetail := #Data<1>.NumericValue
    * #BPFContentShareItemContentID := #Data<1>.ContentIdentifier
    * #BPFContentShareItemCreatedBy := #Data<1>.ItemCreatedByID
    * #BPFContentShareItemCreated := #Data<1>.ItemCreated
    * #BPFContentShareItemModifiedBy := #Data<1>.ItemModifiedByID
    * #BPFContentShareItemModified := #Data<1>.ItemModified
    *
    * Endroutine
    
    
    * Private
    
    
    End_Com
