Reusable Part:
  Name:               GCContactDataClient
  Enabled For RDMLX:  Yes
  Target Platform:    Browser

  Multilingual Details:
  - ENG:
      Description:        "Data Client for Admin Contacts"

  Source: |
    Function Options(*DIRECT)
    Begin_Com Role(*EXTENDS #PRIM_OBJT)
    
    * Application References
    Define_Com Class(#BPFBrowserEvents) Name(#Browser) Scope(*APPLICATION)
    
    * Definitions
    
    * Properties
    Define_Pty Name(Contacts) Get(*REFERENCE #Contacts)
    Define_Pty Name(Contact) Get(GetContact)
    
    Define_Pty Name(IsAdministrationVerified) Get(*AUTO #IsAdminActionVerified) Set(*AUTO #IsAdminActionVerified)
    Define_Com Class(#PRIM_BOLN) Name(#IsAdminActionVerified)
    
    * Events
    Define_Evt Name(OnGetContactsCompleted)
    Define_Map For(*INPUT) Class(#PRIM_BOLN) Name(#MoreResult)
    
    Define_Evt Name(OnGetContactsFailed)
    
    Define_Evt Name(OnGetContactCompleted)
    Define_Evt Name(OnGetContactFailed)
    
    Define_Evt Name(OnContactUpdated)
    Define_Map For(*INPUT) Class(#GCContactItem) Name(#Contact) Pass(*BY_REFERENCE)
    
    * Objects
    
    * Collections
    Define_Com Class(#PRIM_LCOL<#GCContactItem>) Name(#Contacts)
    
    * Routines
    
    * Properties
    Ptyroutine Name(GetContact)
    Define_Map For(*OUTPUT) Class(#GCContactItem) Name(#Property) Pass(*BY_REFERENCE)
    Define_Map For(*INPUT) Class(#xContactIdentification) Name(#Key)
    
    * Search till the first match
    For Each(#Item) In(#Contacts)
    
    Continue If(#Key <> #Item.Identifier)
    
    #Property <= #Item
    
    Leave
    
    Endfor
    
    Endroutine
    
    * Events
    
    
    * Methods
    
    * Verification
    
    * User Accounts
    
    Mthroutine Name(GetContacts)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#UserValue) Mandatory(*NULL)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#GenderValue) Mandatory(*NULL)
    
    #SYS_WEB.Console.Log Text(('In GetContacts.  Gender = &1.  SearchValue = &2').TrimSubstitute( #GenderValue #UserValue ))
    
    * No status, they just want to search by name
    If (#GenderValue.IsNull)
    
    #COM_SELF.GetContactsByName( #UserValue )
    Return
    
    Endif
    
    * if we have status and it not removed, we need choose the right index
    If (#GenderValue.IsNull.IsFalse)
    
    #COM_SELF.GetContactsByGender( #GenderValue #UserValue )
    Return
    
    Endif
    
    Endroutine
    
    * By name Only
    Mthroutine Name(GetContactsByName) Access(*PRIVATE)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#ContactValue)
    
    * Local Variable
    Define_Com Class(#PRIM_BOLN) Name(#More)
     
    * Define Request to Server Routine
    Define_Com Class(#GCContactDataServer.GetContactsByName) Name(#Request)
    
    #SYS_WEB.Console.Log Text('Call the GetContactsByName server routine...')
    
    * Make Request
    #Request.ExecuteAsync Contactvalue(#ContactValue) Userdata(#Contacts) Moreresults(#More) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    #SYS_WEB.Console.Log Text(('Server Routine GetContactsByName completed with Status = &1').TrimSubstitute( #Status ))
    
    If (#Status = OK)
    
    Signal Event(OnGetContactsCompleted) Moreresult(#More)
    
    Else
    
    Signal Event(OnGetContactsFailed)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #SYS_WEB.Console.Log Text(('Server Routine GetContactsByName failed with reason = &1').TrimSubstitute( #Reason ))
    
    #Handled := True
    Signal Event(OnGetContactsFailed)
    
    Endroutine
    
    Endroutine
    
    * By Status and/or name
    Mthroutine Name(GetContactsByGender) Access(*PRIVATE)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#GenderValue)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#ContactValue)
    
    * Local Variable
    Define_Com Class(#PRIM_BOLN) Name(#More)
    
    * Define Request to Server Routine
    Define_Com Class(#GCContactDataServer.GetAccountsByGender) Name(#Request)
    
    * Make Request
    #Request.ExecuteAsync Gendervalue(#GenderValue) Contactvalue(#ContactValue) Userdata(#Contacts) Moreresults(#More) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = OK)
    
    Signal Event(OnGetContactsCompleted) Moreresult(#More)
    
    Else
    
    Signal Event(OnGetContactsFailed)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnGetContactsFailed)
    
    Endroutine
    
    Endroutine
    
    * Get Account by ID only
    Mthroutine Name(GetUserAccountsByID)
    Define_Map For(*INPUT) Class(#PRIM_NMBR) Name(#ContactValue)
    
    * Local Variable
    Define_Com Class(#PRIM_BOLN) Name(#More)
    
    * Define Request to Server Routine
    Define_Com Class(#GCContactDataServer.GetContactByID) Name(#Request)
    
    * Make Request
    #Request.ExecuteAsync Contactid(#ContactValue) Userdata(#Contacts) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = OK)
    
    Signal Event(OnGetContactCompleted)
    
    Else
    
    Signal Event(OnGetContactFailed)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnGetContactFailed)
    
    Endroutine
    
    Endroutine
    
    
    
    End_Com
