Web View:
  Name:               BPFAdminUserSessionEventsView
  Enabled For RDMLX:  Yes

  Multilingual Details:
  - ENG:
      Description:        "Portal Admin of User Sessions View"

  - JPN:
      Description:        "Portal Admin of User Sessions View"

  Source: |
    Begin_Com Role(*EXTENDS #PRIM_VIEW) Displayposition(1) Tabposition(1) Width(1700) Height(800) Layoutmanager(#MainLayout) Verticalscroll(True) Componenttag('BPFAPP008')
    
    * Reference Application Objects
    Define_Com Class(#BPFSessionManager) Name(#Session) Scope(*APPLICATION)
    Define_Com Class(#BPFNavigationManager) Name(#Navigate) Scope(*APPLICATION)
    Define_Com Class(#BPFDataClientManager) Name(#Data) Scope(*APPLICATION)
    
    * Language Support
    Define_Com Class(#BPFAdminUserSessionEventsViewStrings) Name(#Strings)
    
    * Reference for Data client
    Define_Com Class(#BPFUserAccountAdminDataClient) Name(#UserAccounts) Reference(*DYNAMIC)
    
    * Styles
    Define_Com Class(#PRIM_VS.Style) Name(#RoundedCornerStyle) Cornerbottomleft(8) Cornerbottomright(8) Cornertopleft(8) Cornertopright(8)
    Define_Com Class(#PRIM_VS.Style) Name(#NavigationLinkStyle) Cursor(Hand)
    Define_Com Class(#PRIM_VS.Style) Name(#LoadMoreDisplayStyle) Fontweight(Weight500) Cursor(Hand)
    
    * Main View Layout
    Define_Com Class(#PRIM_TBLO) Name(#MainLayout) Margintop(24) Marginbottom(24)
    
    * Rows and Columns
    Define_Com Class(#PRIM_TBLO.Column) Name(#MainLayoutColumn1) Displayposition(1) Parent(#MainLayout) Minwidth(8)
    Define_Com Class(#PRIM_TBLO.Column) Name(#MainLayoutColumn2) Displayposition(2) Parent(#MainLayout) Maxwidth(60)
    Define_Com Class(#PRIM_TBLO.Column) Name(#MainLayoutColumn3) Displayposition(3) Parent(#MainLayout) Width(43) Minwidth(140) Maxwidth(440)
    Define_Com Class(#PRIM_TBLO.Column) Name(#MainLayoutColumn4) Displayposition(4) Parent(#MainLayout) Width(43) Minwidth(140) Maxwidth(440)
    Define_Com Class(#PRIM_TBLO.Column) Name(#MainLayoutColumn5) Displayposition(5) Parent(#MainLayout) Maxwidth(60)
    Define_Com Class(#PRIM_TBLO.Column) Name(#MainLayoutColumn6) Displayposition(6) Parent(#MainLayout) Minwidth(8)
    Define_Com Class(#PRIM_TBLO.Row) Name(#MainLayoutRow1) Displayposition(1) Parent(#MainLayout) Height(93) Units(Content)
    Define_Com Class(#PRIM_TBLO.Row) Name(#MainLayoutRow2) Displayposition(2) Parent(#MainLayout) Height(100) Units(Content)
    Define_Com Class(#PRIM_TBLO.Row) Name(#MainLayoutRow3) Displayposition(3) Parent(#MainLayout) Height(10) Units(Content)
    Define_Com Class(#PRIM_TBLO.Row) Name(#MainLayoutRow4) Displayposition(4) Parent(#MainLayout) Height(80) Units(Content) Minheight(24)
    
    * Layout Items
    Define_Com Class(#PRIM_TBLO.Item) Name(#MainLayoutItem1) Alignment(TopLeft) Column(#MainLayoutColumn2) Manage(#PanelHeading) Parent(#MainLayout) Row(#MainLayoutRow1) Sizing(ContentWidth) Flow(Down) Columnspan(3)
    Define_Com Class(#PRIM_TBLO.Item) Name(#MainLayoutItem2) Alignment(TopLeft) Column(#MainLayoutColumn2) Manage(#InstructionText) Parent(#MainLayout) Row(#MainLayoutRow1) Sizing(ContentHeightFitToWidth) Flow(Down) Margintop(24) Columnspan(3)
    Define_Com Class(#PRIM_TBLO.Item) Name(#MainLayoutItem3) Alignment(TopLeft) Column(#MainLayoutColumn3) Manage(#StartingDate) Parent(#MainLayout) Row(#MainLayoutRow2) Sizing(FitToWidth) Margintop(24) Marginright(12) Flow(Down)
    Define_Com Class(#PRIM_TBLO.Item) Name(#MainLayoutItem4) Alignment(TopLeft) Column(#MainLayoutColumn4) Manage(#EventType) Parent(#MainLayout) Row(#MainLayoutRow2) Sizing(FitToWidth) Margintop(24) Marginleft(12) Flow(Down)
    Define_Com Class(#PRIM_TBLO.Item) Name(#MainLayoutItem5) Manage(#LoadMoreAction) Parent(#MainLayout) Row(#MainLayoutRow4) Sizing(FitToWidth) Column(#MainLayoutColumn3) Alignment(TopLeft) Columnspan(2) Flow(Down) Margintop(24)
    Define_Com Class(#PRIM_TBLO.Item) Name(#MainLayoutItem6) Alignment(TopRight) Column(#MainLayoutColumn4) Manage(#FilterShowAction) Parent(#MainLayout) Row(#MainLayoutRow1) Sizing(None)
    
    * Main Controls
    Define_Com Class(#PRIM_MD.Label) Name(#PanelHeading) Displayposition(1) Left(350) Parent(#COM_OWNER) Tabposition(1) Themedrawstyle('Heading1') Top(24) Width(251) Icon('arrow_back') Captionmarginleft(24) Height(48) Wordwrap(True) Style(#NavigationLinkStyle) Caption('View Session Events')
    Define_Com Class(#PRIM_MD.Icon) Name(#FilterShowAction) Displayposition(2) Icon('filter_list') Left(1242) Parent(#COM_OWNER) Tabposition(6) Top(24) Themedrawstyle('ForegroundMediumPrimary') Style(#NavigationLinkStyle)
    Define_Com Class(#PRIM_MD.Label) Name(#InstructionText) Captionalignment(TopLeft) Displayposition(3) Height(21) Left(350) Parent(#COM_OWNER) Tabposition(2) Top(96) Width(940) Wordwrap(True) Caption('View the events generated by the users activities during their sessions on the portal')
    Define_Com Class(#BPFGenericDateTime.DateTimeField) Name(#StartingDate) Displayposition(4) Left(410) Parent(#COM_OWNER) Tabposition(5) Top(141) Width(428) Captiontype(Caption) Caption('Starting From') Icon('today') Opacity(87) Promptposition(ScreenCenter) Visible(False)
    Define_Com Class(#PRIM_MD.Dropdown) Name(#EventType) Caption('Event Label') Displayposition(5) Left(862) Parent(#COM_OWNER) Tabposition(3) Top(141) Width(428) Height(76) Icon('label') Opacity(87) Visible(False)
    Define_Com Class(#PRIM_MD.Label) Name(#LoadMoreAction) Caption('Load More') Displayposition(6) Left(410) Parent(#COM_OWNER) Tabposition(4) Themedrawstyle('ForegroundMediumPrimary') Top(251) Height(56) Width(880) Style(#LoadMoreDisplayStyle) Captionalignment(Center)
    
    * Reference
    Define_Com Class(#BPFUserAccountAdminItem) Name(#CurrentAccount) Reference(*DYNAMIC)
    
    * Control
    Define_Com Class(#BPFGenericDateTime) Name(#NextLoadDate)
    Define_Com Class(#BPFGenericDateTime) Name(#LastAddedDate)
    
    Define_Com Class(#PRIM_BOLN) Name(#EventTypeLoading)
    
    * Collection
    Define_Com Class(#PRIM_LCOL<#PRIM_TBLO.Item>) Name(#MainLayoutItems)
    Define_Com Class(#PRIM_LCOL<#PRIM_MD.Label>) Name(#DayHeaders)
    Define_Com Class(#PRIM_LCOL<#BPFSessionEventsCard>) Name(#SessionCards)
    
    * Panels
    
    * Routines
    
    * Events
    
    
    Evtroutine Handling(#COM_OWNER.CreateInstance)
    
    * Get References
    #UserAccounts <= (#Data.GetDataClient( #COM_SELF ) *As #BPFUserAccountAdminDataClient)
    
    Endroutine
    
    
    Evtroutine Handling(#COM_OWNER.Initialize)
    
    * Get Reference to current user
    #CurrentAccount <= #UserAccounts.UserAccount<#SYS_WEB.URLParameters<VALUE>.value.UpperCase>
    
    * We load data, so set wait for a user navigation
    #BPFPortal.ViewsPanel.SetWaitingState( ON )
    #COM_SELF.SetStrings
    
    * Set Layout
    #COM_SELF.HandleDeviceChange
    
    *
    
    * Get portal logging settings
    #COM_SELF.SetListActionDisplay( True *NULL *NULL #STRINGS.Text<LOADMOREACTION.LOAD> )
    
    If (#SYS_WEB.URLParameters<STARTING> *IsNot *Null)
    
    If (#SYS_WEB.URLParameters<STARTING>.Value.IsDate( CCYYMMDD ))
    #StartingDate := #SYS_WEB.URLParameters<STARTING>.Value.AsDate( CCYYMMDD )
    Endif
    
    #COM_SELF.ShowHideFilterControls
    
    Endif
    
    If (#SYS_WEB.URLParameters<LABEL> *IsNot *Null)
    
    #EventType := #SYS_WEB.URLParameters<LABEL>.Value
    
    Endif
    
    If (#CurrentAccount *IsNot *Null)
    
    #CurrentAccount.GetSessionEvents Startdate((#StartingDate.Date.Adjust( 1 ))) Forlabel(#EventType)
    
    Else
    
    #UserAccounts.GetUserAccountsByID( #SYS_WEB.URLParameters<VALUE>.value.UpperCase )
    
    Endif
    
    Endroutine
    
    * Webpage
    Evtroutine Handling(#SYS_WEB.DeviceChanged)
    
    * Set Layout
    #COM_SELF.HandleDeviceChange
    
    Endroutine
    
    * Navigation
    Evtroutine Handling(#PanelHeading.Click)
    
    * Back to Settings
    #SYS_WEB.History.GoBack
    
    Endroutine
    
    * Filters
    Evtroutine Handling(#StartingDate.Changed #EventType.Changed)
    
    If (#EventType.Visible.IsFalse Or #EventTypeLoading)
    Return
    Endif
    
    * We load data, so set wait for a user navigation
    #BPFPortal.ViewsPanel.SetWaitingState( ON )
    
    * Place filter values on the URL
    If (#StartingDate.Date.IsNotSqlNull)
    
    #SYS_WEB.History.Replace( ('event=' + #Navigate.CurrentEvent.EventName.lowercase + '&value=' + #Navigate.ValueInQueryString + '&starting=' + (#StartingDate.Date.Adjust( 1 )).AsDisplayString( CCYYMMDD ) + '&label=' + #EventType) False )
    
    Else
    
    #SYS_WEB.History.Replace( ('event=' + #Navigate.CurrentEvent.EventName.lowercase + '&value=' + #Navigate.ValueInQueryString + '&starting=&label=' + #EventType) False )
    
    Endif
    
    * Clear Loaded Data
    #DayHeaders.RemoveAll
    #SessionCards.RemoveAll
    #MainLayoutItems.RemoveAll
    
    * Get portal logging settings
    #LastAddedDate := *SQLNULL
    #COM_SELF.SetListActionDisplay( True *NULL *NULL #STRINGS.Text<LOADMOREACTION.LOAD> )
    #CurrentAccount.GetSessionEvents Startdate((#StartingDate.Date.Adjust( 1 ))) Forlabel(#EventType)
    
    Endroutine
    
    Evtroutine Handling(#EventType.Prompting)
    
    If (#EventType.Items.ItemCount = 0)
    
    #COM_SELF.BuildLabelFilter
    
    Endif
    
    Endroutine
    
    * Actions
    Evtroutine Handling(#LoadMoreAction.Click)
    
    If (#LoadMoreAction.Caption.UpperCase <> #STRINGS.Text<LOADMOREACTION.MORE>.UpperCase)
    Return
    Endif
    
    
    * We load data, so set wait for a user navigation
    #BPFPortal.ViewsPanel.SetWaitingState( ON )
    
    * Get portal logging settings
    #COM_SELF.SetListActionDisplay( True *NULL *NULL #STRINGS.Text<LOADMOREACTION.LOAD> )
    #CurrentAccount.GetSessionEvents Startdate(#NextLoadDate) Forlabel(#EventType)
    
    Endroutine
    
    Evtroutine Handling(#FilterShowAction.Click)
    
    #COM_SELF.ShowHideFilterControls
    
    Endroutine
    
    * Data
    
    Evtroutine Handling(#UserAccounts.OnGetUserAccountCompleted)
    
    * Get Reference to current user
    #CurrentAccount <= #UserAccounts.UserAccount<#SYS_WEB.URLParameters<VALUE>.value>
    
    #CurrentAccount.GetSessionEvents Startdate((#StartingDate.Date.Adjust( 1 ))) Forlabel(#EventType)
    
    Endroutine
    
    Evtroutine Handling(#UserAccounts.OnGetUserAccountFailed)
    
    * Show error
    #BPFPortal.ShowToaster( #STRINGS.Text<USERACCOUNTS.ONGETUSERACCOUNTFAILED> 7500 )
    
    * Turn off loading
    #BPFPortal.ViewsPanel.SetWaitingState( OFF )
    
    Endroutine
    
    Evtroutine Handling(#CurrentAccount.OnGetSessionEventsCompleted) Sessiondata(#SessionEvents) Nextreaddate(#Date)
    
    * Hold on to the next date
    #NextLoadDate := #Date
    
    #COM_SELF.HandleSessionEventDisplay( #SessionEvents )
    
    If (#Date.IsSqlNull)
    
    #COM_SELF.SetListActionDisplay( False )
    
    Else
    
    #COM_SELF.SetListActionDisplay( True #LoadMoreDisplayStyle ForegroundMediumPrimary #STRINGS.Text<LOADMOREACTION.MORE> )
    
    Endif
    
    #BPFPortal.ViewsPanel.SetWaitingState( OFF )
    
    Endroutine
    
    Evtroutine Handling(#CurrentAccount.OnGetSessionEventsFailed)
    
    #BPFPortal.ViewsPanel.SetWaitingState( OFF )
    #BPFPortal.ShowToaster( #STRINGS.Text<CURRENTACCOUNT.ONGETSESSIONEVENTSFAILED> 7500 )
    
    Endroutine
    
    * Methods
    
    Mthroutine Name(SetStrings) Access(*PRIVATE)
    
    #PANELHEADING.CAPTION := #STRINGS.Text<PANELHEADING.CAPTION>
    #INSTRUCTIONTEXT.CAPTION := #STRINGS.Text<INSTRUCTIONTEXT.CAPTION>
    #STARTINGDATE.CAPTION := #STRINGS.Text<STARTINGDATE.CAPTION>
    #EVENTTYPE.CAPTION := #STRINGS.Text<EVENTTYPE.CAPTION>
    
    Endroutine
    
    Mthroutine Name(ShowHideFilterControls) Access(*PRIVATE)
    
    #StartingDate.Visible := *Not #StartingDate.Visible
    #EventType.Visible := *Not #EventType.Visible
    
    Endroutine
    
    Mthroutine Name(HandleSessionEventDisplay) Access(*PRIVATE)
    Define_Map For(*INPUT) Class(#PRIM_LCOL<#BPFSessionEventOutputItem>) Name(#SessionData) Pass(*BY_REFERENCE)
    
    * Store some previous values
    Define_Com Class(#BPFSessionStarted) Name(#PreviousDateTime)
    Define_Com Class(#BPFSessionID) Name(#PreviousEvent)
    
    *
    #PreviousDateTime := #LastAddedDate
    
    * For each day output the top line
    For Each(#Item) In(#SessionData)
    
    * Check for new top line
    If (#PreviousDateTime.Date <> #Item.Started.Date)
    
    * Output Day Header
    #COM_SELF.AddDayHeader( (#Item.Started.Date.AsDisplayString( ML_DDDDDDDDD ) + ', ' + #Item.Started.Date.AsDisplayString( ML_DDbMMMMMMMMMbCCYY )) )
    
    * Remember the date
    #PreviousDateTime := #Item.Started
    
    Endif
    
    If (#PreviousEvent <> #Item.Identifier)
    
    * Output Session Header
    #COM_SELF.AddSessionCard Cardtimes((#Item.Started.Time.AsDisplayString( HHsMMsSS ).Substring( 1 5 ) + ' -  ' + (#Item.Ended.Time.AsDisplayString( HHsMMsSS ).Substring( 1 5 )))) Cardduration((#Item.Duration.asstring + ' mins')) Cardcount((#Item.EventCount.asstring + ' Events'))
    
    * Remember the session
    #PreviousEvent := #Item.Identifier
    
    Endif
    
    * Okay we can just put out the line now
    #SessionCards.Last.EventText.Caption += (#Item.EventDateTime.Time.AsDisplayString( HHsMMsSS ) + '  -  ' + #Item.Event) + (10).AsUnicodeString
    
    Endfor
    
    * Record the last addeded
    #LastAddedDate := #PreviousDateTime
    
    Endroutine
    
    Mthroutine Name(AddDayHeader)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#HeaderText)
    
    * We are try to make this
    * Define_Com Class(#PRIM_MD.Label) Name(#Text) Caption('Wednesday, 21 August 2019') Displayposition(5) Left(410) Parent(#COM_OWNER) Tabposition(5) Themedrawstyle('Heading3+Back(240,240,240,1)') Top(224) Width(880) Captionmarginleft(16) Height(60)
    
    * First we need the layout item
    #MainLayoutItems.Insert( #Com_self.CreateLayoutItem( DAYHEADER ) )
    
    * Now Create the Header
    #DayHeaders.Insert( (*New #PRIM_MD.Label) )
    
    * Set the properties
    #DayHeaders.Last.DisplayPosition := (#MainLayoutItems.ItemCount + 6)
    #DayHeaders.last.Height := 60
    #DayHeaders.last.Caption := #HeaderText
    #DayHeaders.last.Captionmarginleft := 16
    #DayHeaders.last.Style <= #RoundedCornerStyle
    
    If (#SYS_WEB.WebPage.ThemeBackground = Light)
    
    #DayHeaders.last.ThemeDrawStyle := 'Heading3+Back(240,240,240,1)'
    
    Else
    
    #DayHeaders.last.ThemeDrawStyle := 'Heading3+Back(80,80,80,1)'
    
    Endif
    
    * Put Header under management
    #MainLayoutItems.Last.Manage <= #DayHeaders.Last
    
    * Set Parents for Layout and Header
    #MainLayoutItems.Last.Parent <= #MainLayout
    #DayHeaders.last.Parent <= #COM_OWNER
    
    Endroutine
    
    Mthroutine Name(AddSessionCard)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#CardTimes)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#CardDuration)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#CardCount)
    
    * This is what we are making
    * Define_Com Class(#BPFSessionEventsCard) Name(#BPFSessionEventsCard) Displayposition(5) Left(410) Parent(#COM_OWNER) Tabposition(5) Tabstop(False) Top(300) Width(880)
    
    * First we need a layout item
    #MainLayoutItems.insert( #Com_self.CreateLayoutItem( SESSION ) )
    
    * Now for the card
    #SessionCards.Insert( (*New #BPFSessionEventsCard) )
    
    * Set Properties
    #SessionCards.Last.DisplayPosition := (#MainLayoutItems.ItemCount + 6)
    #SessionCards.last.TimesLabel := #CardTimes
    #SessionCards.last.DurationLabel := #CardDuration
    #SessionCards.last.CountLabel := #CardCount
    
    * Put card under management
    #MainLayoutItems.Last.Manage <= #SessionCards.Last
    
    * Set Parents for Layout and Header
    #MainLayoutItems.Last.Parent <= #MainLayout
    #SessionCards.last.Parent <= #COM_OWNER
    
    Endroutine
    
    Mthroutine Name(CreateLayoutItem)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#For)
    Define_Map For(*RESULT) Class(#PRIM_TBLO.Item) Name(#Result) Pass(*BY_REFERENCE)
    
    #Result <= (*New #PRIM_TBLO.Item)
    
    * We are trying to build either
    * Header - Define_Com Class(#PRIM_TBLO.Item) Alignment(TopLeft) Column(#MainLayoutColumn3) Row(#MainLayoutRow3) Sizing(FitToWidth) Margintop(24) Columnspan(2) Flow(Down)
    * Card -   Define_Com Class(#PRIM_TBLO.Item) Alignment(TopLeft) Column(#MainLayoutColumn3) Row(#MainLayoutRow3) Sizing(ContentHeightFitToWidth) Margintop(16) Columnspan(2) Flow(Down)
    
    * Common Properties
    
    #Result.Alignment := TopLeft
    #Result.Column <= #MainLayoutColumn3
    #Result.ColumnSpan := 2
    #Result.Row <= #MainLayoutRow3
    #Result.Flow := Down
    
    * Set Margin Top
    If (#For = DAYHEADER)
    
    #Result.Sizing := FitToWidth
    #Result.MarginTop := 24
    
    Endif
    
    If (#For = SESSION)
    
    #Result.Sizing := ContentHeightFitToWidth
    #Result.MarginTop := 16
    
    Endif
    
    Endroutine
    
    Mthroutine Name(SetListActionDisplay) Access(*PRIVATE)
    Define_Map For(*INPUT) Class(#PRIM_BOLN) Name(#Visible)
    Define_Map For(*INPUT) Class(#prim_vs.Style) Name(#Style) Mandatory(*NULL) Pass(*BY_REFERENCE)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#DrawStyle) Mandatory(*NULL)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#Message) Mandatory(*NULL)
    
    If (#Visible)
    
    * Set Style
    #LoadMoreAction.Style <= #Style
    #LoadMoreAction.ThemeDrawStyle := #DrawStyle
    
    * Set Text
    #LoadMoreAction := #Message
    
    * Ensure we can see Action Label
    * #LoadMoreAction.Visible := True
    
    Else
    
    * If not visible then just hide
    #LoadMoreAction := *null
    
    Endif
    
    Endroutine
    
    Mthroutine Name(BuildLabelFilter) Access(*PRIVATE)
    
    * Prevent unwanted actions
    #EventTypeLoading := True
    
    * Ensure its clear, it should be but its good practice
    #EventType.Items.RemoveAll
    
    * Need a blank value
    #EventType.Items.Add Value(*null)
    
    * Add from the session object
    For Each(#Item) In(#Session.EventLabels)
    
    #EventType.Items.Add Value(#Item.Label)
    
    Endfor
    
    * Allow actions again
    #EventTypeLoading := False
    
    Endroutine
    
    Mthroutine Name(HandleDeviceChange) Access(*PRIVATE)
    
    If (#SYS_WEB.Device = Mobile)
    
    * Set for narrow screens
    #MainLayoutItem3.MarginRight #MainLayoutItem4.MarginLeft := 0
    #MainLayoutItem3.ColumnSpan #MainLayoutItem4.ColumnSpan := 2
    #MainLayoutItem4.Column <= #MainLayoutColumn3
    
    Else
    
    * Set for wider screens
    #MainLayoutItem3.MarginRight #MainLayoutItem4.MarginLeft := 12
    #MainLayoutItem3.ColumnSpan #MainLayoutItem4.ColumnSpan := 1
    #MainLayoutItem4.Column <= #MainLayoutColumn4
    
    Endif
    
    Endroutine
    
    End_Com
