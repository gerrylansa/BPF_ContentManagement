Integration Logging Control

You are able to choose if the integration logging is off, on or only happens when an error is encountered. Its is recommend logging is left off unless required. You are also able to clear all integration logs if needed.

Enable Logs

Off

On

Only on error

Clear Logs

Clear all Logs

Settings saved

FAILED to save settings

Logs removed

FAILED to save settings



*Language Support
Define_Com Class(#BPFIntegrationLogControlViewStrings) Name(#Strings)

#COM_SELF.SetStrings

Mthroutine Name(SetStrings)

#PANELHEADING.CAPTION := #STRINGS.Text<PANELHEADING.CAPTION>
#INSTRUCTIONTEXT.CAPTION := #STRINGS.Text<INSTRUCTIONTEXT.CAPTION>
#ENABLEDPANELHEADING.CAPTION := #STRINGS.Text<ENABLEDPANELHEADING.CAPTION>
#ENABLEDOPTION1.CAPTION := #STRINGS.Text<ENABLEDOPTION1.CAPTION>
#ENABLEDOPTION2.CAPTION := #STRINGS.Text<ENABLEDOPTION2.CAPTION>
#ENABLEDOPTION3.CAPTION := #STRINGS.Text<ENABLEDOPTION3.CAPTION>
#CLEARLOGSPANELHEADING.CAPTION := #STRINGS.Text<CLEARLOGSPANELHEADING.CAPTION>
#CLEARLOGSACTION.CAPTION := #STRINGS.Text<CLEARLOGSACTION.CAPTION>
#LOGGINGDATA.ONSETINTEGRATIONLOGGINGCONTROLSETTINGCOMPLETED := #STRINGS.Text<LOGGINGDATA.ONSETINTEGRATIONLOGGINGCONTROLSETTINGCOMPLETED>
#LOGGINGDATA.ONSETINTEGRATIONLOGGINGCONTROLSETTINGFAILED := #STRINGS.Text<LOGGINGDATA.ONSETINTEGRATIONLOGGINGCONTROLSETTINGFAILED>
#LOGGINGDATA.ONINTEGRATIONLOGSREMOVECOMPLETED := #STRINGS.Text<LOGGINGDATA.ONINTEGRATIONLOGSREMOVECOMPLETED>
#LOGGINGDATA.ONINTEGRATIONLOGSREMOVEFAILED := #STRINGS.Text<LOGGINGDATA.ONINTEGRATIONLOGSREMOVEFAILED>

Endroutine
